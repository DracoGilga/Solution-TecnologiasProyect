#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TecnologiasProyect.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Tecnologias")]
	public partial class DataClassesTutoriaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAcademico(Academico instance);
    partial void UpdateAcademico(Academico instance);
    partial void DeleteAcademico(Academico instance);
    partial void InsertComentarioGeneral(ComentarioGeneral instance);
    partial void UpdateComentarioGeneral(ComentarioGeneral instance);
    partial void DeleteComentarioGeneral(ComentarioGeneral instance);
    partial void InsertEstudiante(Estudiante instance);
    partial void UpdateEstudiante(Estudiante instance);
    partial void DeleteEstudiante(Estudiante instance);
    partial void InsertExperienciaEducativa(ExperienciaEducativa instance);
    partial void UpdateExperienciaEducativa(ExperienciaEducativa instance);
    partial void DeleteExperienciaEducativa(ExperienciaEducativa instance);
    partial void InsertMateria(Materia instance);
    partial void UpdateMateria(Materia instance);
    partial void DeleteMateria(Materia instance);
    partial void InsertPeriodoEscolar(PeriodoEscolar instance);
    partial void UpdatePeriodoEscolar(PeriodoEscolar instance);
    partial void DeletePeriodoEscolar(PeriodoEscolar instance);
    partial void InsertProblematica(Problematica instance);
    partial void UpdateProblematica(Problematica instance);
    partial void DeleteProblematica(Problematica instance);
    partial void InsertProgramaEducativo(ProgramaEducativo instance);
    partial void UpdateProgramaEducativo(ProgramaEducativo instance);
    partial void DeleteProgramaEducativo(ProgramaEducativo instance);
    partial void InsertSolucion(Solucion instance);
    partial void UpdateSolucion(Solucion instance);
    partial void DeleteSolucion(Solucion instance);
    partial void InsertTipoProblematica(TipoProblematica instance);
    partial void UpdateTipoProblematica(TipoProblematica instance);
    partial void DeleteTipoProblematica(TipoProblematica instance);
    partial void InsertTutoria(Tutoria instance);
    partial void UpdateTutoria(Tutoria instance);
    partial void DeleteTutoria(Tutoria instance);
    partial void InsertReporteTutoria(ReporteTutoria instance);
    partial void UpdateReporteTutoria(ReporteTutoria instance);
    partial void DeleteReporteTutoria(ReporteTutoria instance);
    partial void InsertProblematicaPersonal(ProblematicaPersonal instance);
    partial void UpdateProblematicaPersonal(ProblematicaPersonal instance);
    partial void DeleteProblematicaPersonal(ProblematicaPersonal instance);
    #endregion
		
		public DataClassesTutoriaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTutoriaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTutoriaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTutoriaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Academico> Academico
		{
			get
			{
				return this.GetTable<Academico>();
			}
		}
		
		public System.Data.Linq.Table<ComentarioGeneral> ComentarioGeneral
		{
			get
			{
				return this.GetTable<ComentarioGeneral>();
			}
		}
		
		public System.Data.Linq.Table<Estudiante> Estudiante
		{
			get
			{
				return this.GetTable<Estudiante>();
			}
		}
		
		public System.Data.Linq.Table<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this.GetTable<ExperienciaEducativa>();
			}
		}
		
		public System.Data.Linq.Table<Materia> Materia
		{
			get
			{
				return this.GetTable<Materia>();
			}
		}
		
		public System.Data.Linq.Table<PeriodoEscolar> PeriodoEscolar
		{
			get
			{
				return this.GetTable<PeriodoEscolar>();
			}
		}
		
		public System.Data.Linq.Table<Problematica> Problematica
		{
			get
			{
				return this.GetTable<Problematica>();
			}
		}
		
		public System.Data.Linq.Table<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this.GetTable<ProgramaEducativo>();
			}
		}
		
		public System.Data.Linq.Table<Solucion> Solucion
		{
			get
			{
				return this.GetTable<Solucion>();
			}
		}
		
		public System.Data.Linq.Table<TipoProblematica> TipoProblematica
		{
			get
			{
				return this.GetTable<TipoProblematica>();
			}
		}
		
		public System.Data.Linq.Table<Tutoria> Tutoria
		{
			get
			{
				return this.GetTable<Tutoria>();
			}
		}
		
		public System.Data.Linq.Table<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this.GetTable<ReporteTutoria>();
			}
		}
		
		public System.Data.Linq.Table<ProblematicaPersonal> ProblematicaPersonal
		{
			get
			{
				return this.GetTable<ProblematicaPersonal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Academico")]
	public partial class Academico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAcademico;
		
		private string _noPersonal;
		
		private string _nombre;
		
		private string _apellidoPaterno;
		
		private string _apellidoMaterno;
		
		private string _correoPersonal;
		
		private string _correoInstitucional;
		
		private string _pasword;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntitySet<ProgramaEducativo> _ProgramaEducativo;
		
		private EntitySet<ProgramaEducativo> _ProgramaEducativo1;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAcademicoChanging(int value);
    partial void OnIdAcademicoChanged();
    partial void OnnoPersonalChanging(string value);
    partial void OnnoPersonalChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoPaternoChanging(string value);
    partial void OnapellidoPaternoChanged();
    partial void OnapellidoMaternoChanging(string value);
    partial void OnapellidoMaternoChanged();
    partial void OncorreoPersonalChanging(string value);
    partial void OncorreoPersonalChanged();
    partial void OncorreoInstitucionalChanging(string value);
    partial void OncorreoInstitucionalChanged();
    partial void OnpaswordChanging(string value);
    partial void OnpaswordChanged();
    #endregion
		
		public Academico()
		{
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			this._ProgramaEducativo = new EntitySet<ProgramaEducativo>(new Action<ProgramaEducativo>(this.attach_ProgramaEducativo), new Action<ProgramaEducativo>(this.detach_ProgramaEducativo));
			this._ProgramaEducativo1 = new EntitySet<ProgramaEducativo>(new Action<ProgramaEducativo>(this.attach_ProgramaEducativo1), new Action<ProgramaEducativo>(this.detach_ProgramaEducativo1));
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcademico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAcademico
		{
			get
			{
				return this._IdAcademico;
			}
			set
			{
				if ((this._IdAcademico != value))
				{
					this.OnIdAcademicoChanging(value);
					this.SendPropertyChanging();
					this._IdAcademico = value;
					this.SendPropertyChanged("IdAcademico");
					this.OnIdAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noPersonal", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string noPersonal
		{
			get
			{
				return this._noPersonal;
			}
			set
			{
				if ((this._noPersonal != value))
				{
					this.OnnoPersonalChanging(value);
					this.SendPropertyChanging();
					this._noPersonal = value;
					this.SendPropertyChanged("noPersonal");
					this.OnnoPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoPaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellidoPaterno
		{
			get
			{
				return this._apellidoPaterno;
			}
			set
			{
				if ((this._apellidoPaterno != value))
				{
					this.OnapellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoPaterno = value;
					this.SendPropertyChanged("apellidoPaterno");
					this.OnapellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoMaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellidoMaterno
		{
			get
			{
				return this._apellidoMaterno;
			}
			set
			{
				if ((this._apellidoMaterno != value))
				{
					this.OnapellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoMaterno = value;
					this.SendPropertyChanged("apellidoMaterno");
					this.OnapellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correoPersonal", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string correoPersonal
		{
			get
			{
				return this._correoPersonal;
			}
			set
			{
				if ((this._correoPersonal != value))
				{
					this.OncorreoPersonalChanging(value);
					this.SendPropertyChanging();
					this._correoPersonal = value;
					this.SendPropertyChanged("correoPersonal");
					this.OncorreoPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correoInstitucional", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string correoInstitucional
		{
			get
			{
				return this._correoInstitucional;
			}
			set
			{
				if ((this._correoInstitucional != value))
				{
					this.OncorreoInstitucionalChanging(value);
					this.SendPropertyChanging();
					this._correoInstitucional = value;
					this.SendPropertyChanged("correoInstitucional");
					this.OncorreoInstitucionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasword", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pasword
		{
			get
			{
				return this._pasword;
			}
			set
			{
				if ((this._pasword != value))
				{
					this.OnpaswordChanging(value);
					this.SendPropertyChanging();
					this._pasword = value;
					this.SendPropertyChanged("pasword");
					this.OnpaswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_Estudiante", Storage="_Estudiante", ThisKey="IdAcademico", OtherKey="IdTutor")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="IdAcademico", OtherKey="IdAcademico")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ProgramaEducativo", Storage="_ProgramaEducativo", ThisKey="IdAcademico", OtherKey="IdAcademicoJefe")]
		public EntitySet<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo;
			}
			set
			{
				this._ProgramaEducativo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ProgramaEducativo1", Storage="_ProgramaEducativo1", ThisKey="IdAcademico", OtherKey="IdCoordinador")]
		public EntitySet<ProgramaEducativo> ProgramaEducativo1
		{
			get
			{
				return this._ProgramaEducativo1;
			}
			set
			{
				this._ProgramaEducativo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="IdAcademico", OtherKey="IdTutor")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Academico = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.Academico = null;
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Academico = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Academico = null;
		}
		
		private void attach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Academico = this;
		}
		
		private void detach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Academico = null;
		}
		
		private void attach_ProgramaEducativo1(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Academico1 = this;
		}
		
		private void detach_ProgramaEducativo1(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Academico1 = null;
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Academico = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Academico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComentarioGeneral")]
	public partial class ComentarioGeneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdComentario;
		
		private int _IdReporte;
		
		private string _descripcion;
		
		private EntityRef<ReporteTutoria> _ReporteTutoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdComentarioChanging(int value);
    partial void OnIdComentarioChanged();
    partial void OnIdReporteChanging(int value);
    partial void OnIdReporteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public ComentarioGeneral()
		{
			this._ReporteTutoria = default(EntityRef<ReporteTutoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComentario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdComentario
		{
			get
			{
				return this._IdComentario;
			}
			set
			{
				if ((this._IdComentario != value))
				{
					this.OnIdComentarioChanging(value);
					this.SendPropertyChanging();
					this._IdComentario = value;
					this.SendPropertyChanged("IdComentario");
					this.OnIdComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReporte", DbType="Int NOT NULL")]
		public int IdReporte
		{
			get
			{
				return this._IdReporte;
			}
			set
			{
				if ((this._IdReporte != value))
				{
					if (this._ReporteTutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdReporteChanging(value);
					this.SendPropertyChanging();
					this._IdReporte = value;
					this.SendPropertyChanged("IdReporte");
					this.OnIdReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(70)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_ComentarioGeneral", Storage="_ReporteTutoria", ThisKey="IdReporte", OtherKey="IdReporte", IsForeignKey=true)]
		public ReporteTutoria ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria.Entity;
			}
			set
			{
				ReporteTutoria previousValue = this._ReporteTutoria.Entity;
				if (((previousValue != value) 
							|| (this._ReporteTutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReporteTutoria.Entity = null;
						previousValue.ComentarioGeneral.Remove(this);
					}
					this._ReporteTutoria.Entity = value;
					if ((value != null))
					{
						value.ComentarioGeneral.Add(this);
						this._IdReporte = value.IdReporte;
					}
					else
					{
						this._IdReporte = default(int);
					}
					this.SendPropertyChanged("ReporteTutoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estudiante")]
	public partial class Estudiante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstudiante;
		
		private string _matricula;
		
		private string _nombre;
		
		private string _apellidoPaterno;
		
		private string _apellidoMaterno;
		
		private string _correoPersonal;
		
		private string _correoInstitucional;
		
		private int _IdTutor;
		
		private int _IdProgramaEducativo;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntitySet<ProblematicaPersonal> _ProblematicaPersonal;
		
		private EntityRef<Academico> _Academico;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstudianteChanging(int value);
    partial void OnIdEstudianteChanged();
    partial void OnmatriculaChanging(string value);
    partial void OnmatriculaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoPaternoChanging(string value);
    partial void OnapellidoPaternoChanged();
    partial void OnapellidoMaternoChanging(string value);
    partial void OnapellidoMaternoChanged();
    partial void OncorreoPersonalChanging(string value);
    partial void OncorreoPersonalChanged();
    partial void OncorreoInstitucionalChanging(string value);
    partial void OncorreoInstitucionalChanged();
    partial void OnIdTutorChanging(int value);
    partial void OnIdTutorChanged();
    partial void OnIdProgramaEducativoChanging(int value);
    partial void OnIdProgramaEducativoChanged();
    #endregion
		
		public Estudiante()
		{
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._ProblematicaPersonal = new EntitySet<ProblematicaPersonal>(new Action<ProblematicaPersonal>(this.attach_ProblematicaPersonal), new Action<ProblematicaPersonal>(this.detach_ProblematicaPersonal));
			this._Academico = default(EntityRef<Academico>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudiante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEstudiante
		{
			get
			{
				return this._IdEstudiante;
			}
			set
			{
				if ((this._IdEstudiante != value))
				{
					this.OnIdEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IdEstudiante = value;
					this.SendPropertyChanged("IdEstudiante");
					this.OnIdEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricula", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				if ((this._matricula != value))
				{
					this.OnmatriculaChanging(value);
					this.SendPropertyChanging();
					this._matricula = value;
					this.SendPropertyChanged("matricula");
					this.OnmatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoPaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellidoPaterno
		{
			get
			{
				return this._apellidoPaterno;
			}
			set
			{
				if ((this._apellidoPaterno != value))
				{
					this.OnapellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoPaterno = value;
					this.SendPropertyChanged("apellidoPaterno");
					this.OnapellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoMaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellidoMaterno
		{
			get
			{
				return this._apellidoMaterno;
			}
			set
			{
				if ((this._apellidoMaterno != value))
				{
					this.OnapellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoMaterno = value;
					this.SendPropertyChanged("apellidoMaterno");
					this.OnapellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correoPersonal", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correoPersonal
		{
			get
			{
				return this._correoPersonal;
			}
			set
			{
				if ((this._correoPersonal != value))
				{
					this.OncorreoPersonalChanging(value);
					this.SendPropertyChanging();
					this._correoPersonal = value;
					this.SendPropertyChanged("correoPersonal");
					this.OncorreoPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correoInstitucional", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correoInstitucional
		{
			get
			{
				return this._correoInstitucional;
			}
			set
			{
				if ((this._correoInstitucional != value))
				{
					this.OncorreoInstitucionalChanging(value);
					this.SendPropertyChanging();
					this._correoInstitucional = value;
					this.SendPropertyChanged("correoInstitucional");
					this.OncorreoInstitucionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTutor", DbType="Int NOT NULL")]
		public int IdTutor
		{
			get
			{
				return this._IdTutor;
			}
			set
			{
				if ((this._IdTutor != value))
				{
					if (this._Academico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTutorChanging(value);
					this.SendPropertyChanging();
					this._IdTutor = value;
					this.SendPropertyChanged("IdTutor");
					this.OnIdTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProgramaEducativo", DbType="Int NOT NULL")]
		public int IdProgramaEducativo
		{
			get
			{
				return this._IdProgramaEducativo;
			}
			set
			{
				if ((this._IdProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IdProgramaEducativo = value;
					this.SendPropertyChanged("IdProgramaEducativo");
					this.OnIdProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="IdEstudiante", OtherKey="IdEstudiante")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_ProblematicaPersonal", Storage="_ProblematicaPersonal", ThisKey="IdEstudiante", OtherKey="IdEstudiante")]
		public EntitySet<ProblematicaPersonal> ProblematicaPersonal
		{
			get
			{
				return this._ProblematicaPersonal;
			}
			set
			{
				this._ProblematicaPersonal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_Estudiante", Storage="_Academico", ThisKey="IdTutor", OtherKey="IdAcademico", IsForeignKey=true)]
		public Academico Academico
		{
			get
			{
				return this._Academico.Entity;
			}
			set
			{
				Academico previousValue = this._Academico.Entity;
				if (((previousValue != value) 
							|| (this._Academico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academico.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._Academico.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._IdTutor = value.IdAcademico;
					}
					else
					{
						this._IdTutor = default(int);
					}
					this.SendPropertyChanged("Academico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Estudiante", Storage="_ProgramaEducativo", ThisKey="IdProgramaEducativo", OtherKey="IdPRogramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.Estudiante.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.Estudiante.Add(this);
						this._IdProgramaEducativo = value.IdPRogramaEducativo;
					}
					else
					{
						this._IdProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = null;
		}
		
		private void attach_ProblematicaPersonal(ProblematicaPersonal entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = this;
		}
		
		private void detach_ProblematicaPersonal(ProblematicaPersonal entity)
		{
			this.SendPropertyChanging();
			entity.Estudiante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienciaEducativa")]
	public partial class ExperienciaEducativa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdExperienciaEducativa;
		
		private string _nrc;
		
		private string _bloque;
		
		private int _IdAcademico;
		
		private int _IdPeriodoEscolar;
		
		private int _IdMateria;
		
		private int _IdProgramaEducativo;
		
		private EntitySet<Problematica> _Problematica;
		
		private EntityRef<Academico> _Academico;
		
		private EntityRef<Materia> _Materia;
		
		private EntityRef<PeriodoEscolar> _PeriodoEscolar;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdExperienciaEducativaChanging(int value);
    partial void OnIdExperienciaEducativaChanged();
    partial void OnnrcChanging(string value);
    partial void OnnrcChanged();
    partial void OnbloqueChanging(string value);
    partial void OnbloqueChanged();
    partial void OnIdAcademicoChanging(int value);
    partial void OnIdAcademicoChanged();
    partial void OnIdPeriodoEscolarChanging(int value);
    partial void OnIdPeriodoEscolarChanged();
    partial void OnIdMateriaChanging(int value);
    partial void OnIdMateriaChanged();
    partial void OnIdProgramaEducativoChanging(int value);
    partial void OnIdProgramaEducativoChanged();
    #endregion
		
		public ExperienciaEducativa()
		{
			this._Problematica = new EntitySet<Problematica>(new Action<Problematica>(this.attach_Problematica), new Action<Problematica>(this.detach_Problematica));
			this._Academico = default(EntityRef<Academico>);
			this._Materia = default(EntityRef<Materia>);
			this._PeriodoEscolar = default(EntityRef<PeriodoEscolar>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperienciaEducativa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdExperienciaEducativa
		{
			get
			{
				return this._IdExperienciaEducativa;
			}
			set
			{
				if ((this._IdExperienciaEducativa != value))
				{
					this.OnIdExperienciaEducativaChanging(value);
					this.SendPropertyChanging();
					this._IdExperienciaEducativa = value;
					this.SendPropertyChanged("IdExperienciaEducativa");
					this.OnIdExperienciaEducativaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrc", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string nrc
		{
			get
			{
				return this._nrc;
			}
			set
			{
				if ((this._nrc != value))
				{
					this.OnnrcChanging(value);
					this.SendPropertyChanging();
					this._nrc = value;
					this.SendPropertyChanged("nrc");
					this.OnnrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloque", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string bloque
		{
			get
			{
				return this._bloque;
			}
			set
			{
				if ((this._bloque != value))
				{
					this.OnbloqueChanging(value);
					this.SendPropertyChanging();
					this._bloque = value;
					this.SendPropertyChanged("bloque");
					this.OnbloqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcademico", DbType="Int NOT NULL")]
		public int IdAcademico
		{
			get
			{
				return this._IdAcademico;
			}
			set
			{
				if ((this._IdAcademico != value))
				{
					if (this._Academico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAcademicoChanging(value);
					this.SendPropertyChanging();
					this._IdAcademico = value;
					this.SendPropertyChanged("IdAcademico");
					this.OnIdAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPeriodoEscolar", DbType="Int NOT NULL")]
		public int IdPeriodoEscolar
		{
			get
			{
				return this._IdPeriodoEscolar;
			}
			set
			{
				if ((this._IdPeriodoEscolar != value))
				{
					if (this._PeriodoEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPeriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._IdPeriodoEscolar = value;
					this.SendPropertyChanged("IdPeriodoEscolar");
					this.OnIdPeriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMateria", DbType="Int NOT NULL")]
		public int IdMateria
		{
			get
			{
				return this._IdMateria;
			}
			set
			{
				if ((this._IdMateria != value))
				{
					if (this._Materia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMateriaChanging(value);
					this.SendPropertyChanging();
					this._IdMateria = value;
					this.SendPropertyChanged("IdMateria");
					this.OnIdMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProgramaEducativo", DbType="Int NOT NULL")]
		public int IdProgramaEducativo
		{
			get
			{
				return this._IdProgramaEducativo;
			}
			set
			{
				if ((this._IdProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IdProgramaEducativo = value;
					this.SendPropertyChanged("IdProgramaEducativo");
					this.OnIdProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_Problematica", Storage="_Problematica", ThisKey="IdExperienciaEducativa", OtherKey="IdExperienciaEducativa")]
		public EntitySet<Problematica> Problematica
		{
			get
			{
				return this._Problematica;
			}
			set
			{
				this._Problematica.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ExperienciaEducativa", Storage="_Academico", ThisKey="IdAcademico", OtherKey="IdAcademico", IsForeignKey=true)]
		public Academico Academico
		{
			get
			{
				return this._Academico.Entity;
			}
			set
			{
				Academico previousValue = this._Academico.Entity;
				if (((previousValue != value) 
							|| (this._Academico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academico.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._Academico.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._IdAcademico = value.IdAcademico;
					}
					else
					{
						this._IdAcademico = default(int);
					}
					this.SendPropertyChanged("Academico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_ExperienciaEducativa", Storage="_Materia", ThisKey="IdMateria", OtherKey="IdMAteria", IsForeignKey=true)]
		public Materia Materia
		{
			get
			{
				return this._Materia.Entity;
			}
			set
			{
				Materia previousValue = this._Materia.Entity;
				if (((previousValue != value) 
							|| (this._Materia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materia.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._Materia.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._IdMateria = value.IdMAteria;
					}
					else
					{
						this._IdMateria = default(int);
					}
					this.SendPropertyChanged("Materia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ExperienciaEducativa", Storage="_PeriodoEscolar", ThisKey="IdPeriodoEscolar", OtherKey="IdPEriodoEscolar", IsForeignKey=true)]
		public PeriodoEscolar PeriodoEscolar
		{
			get
			{
				return this._PeriodoEscolar.Entity;
			}
			set
			{
				PeriodoEscolar previousValue = this._PeriodoEscolar.Entity;
				if (((previousValue != value) 
							|| (this._PeriodoEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodoEscolar.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._PeriodoEscolar.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._IdPeriodoEscolar = value.IdPEriodoEscolar;
					}
					else
					{
						this._IdPeriodoEscolar = default(int);
					}
					this.SendPropertyChanged("PeriodoEscolar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ExperienciaEducativa", Storage="_ProgramaEducativo", ThisKey="IdProgramaEducativo", OtherKey="IdPRogramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._IdProgramaEducativo = value.IdPRogramaEducativo;
					}
					else
					{
						this._IdProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = this;
		}
		
		private void detach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciaEducativa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materia")]
	public partial class Materia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMAteria;
		
		private string _nombre;
		
		private int _creditos;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMAteriaChanging(int value);
    partial void OnIdMAteriaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncreditosChanging(int value);
    partial void OncreditosChanged();
    #endregion
		
		public Materia()
		{
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMAteria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMAteria
		{
			get
			{
				return this._IdMAteria;
			}
			set
			{
				if ((this._IdMAteria != value))
				{
					this.OnIdMAteriaChanging(value);
					this.SendPropertyChanging();
					this._IdMAteria = value;
					this.SendPropertyChanged("IdMAteria");
					this.OnIdMAteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditos", DbType="Int NOT NULL")]
		public int creditos
		{
			get
			{
				return this._creditos;
			}
			set
			{
				if ((this._creditos != value))
				{
					this.OncreditosChanging(value);
					this.SendPropertyChanging();
					this._creditos = value;
					this.SendPropertyChanged("creditos");
					this.OncreditosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="IdMAteria", OtherKey="IdMateria")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Materia = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Materia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodoEscolar")]
	public partial class PeriodoEscolar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPEriodoEscolar;
		
		private string _nombre;
		
		private System.DateTime _fechaInicio;
		
		private System.DateTime _fechaFin;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPEriodoEscolarChanging(int value);
    partial void OnIdPEriodoEscolarChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnfechaInicioChanging(System.DateTime value);
    partial void OnfechaInicioChanged();
    partial void OnfechaFinChanging(System.DateTime value);
    partial void OnfechaFinChanged();
    #endregion
		
		public PeriodoEscolar()
		{
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPEriodoEscolar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPEriodoEscolar
		{
			get
			{
				return this._IdPEriodoEscolar;
			}
			set
			{
				if ((this._IdPEriodoEscolar != value))
				{
					this.OnIdPEriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._IdPEriodoEscolar = value;
					this.SendPropertyChanged("IdPEriodoEscolar");
					this.OnIdPEriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaInicio", DbType="Date NOT NULL")]
		public System.DateTime fechaInicio
		{
			get
			{
				return this._fechaInicio;
			}
			set
			{
				if ((this._fechaInicio != value))
				{
					this.OnfechaInicioChanging(value);
					this.SendPropertyChanging();
					this._fechaInicio = value;
					this.SendPropertyChanged("fechaInicio");
					this.OnfechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaFin", DbType="Date NOT NULL")]
		public System.DateTime fechaFin
		{
			get
			{
				return this._fechaFin;
			}
			set
			{
				if ((this._fechaFin != value))
				{
					this.OnfechaFinChanging(value);
					this.SendPropertyChanging();
					this._fechaFin = value;
					this.SendPropertyChanged("fechaFin");
					this.OnfechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="IdPEriodoEscolar", OtherKey="IdPeriodoEscolar")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Problematica")]
	public partial class Problematica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProblematica;
		
		private int _IdReporte;
		
		private string _descripcion;
		
		private string _titulo;
		
		private int _noIncidencias;
		
		private int _IdTipo;
		
		private int _IdExperienciaEducativa;
		
		private EntitySet<Solucion> _Solucion;
		
		private EntitySet<ProblematicaPersonal> _ProblematicaPersonal;
		
		private EntityRef<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntityRef<TipoProblematica> _TipoProblematica;
		
		private EntityRef<ReporteTutoria> _ReporteTutoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProblematicaChanging(int value);
    partial void OnIdProblematicaChanged();
    partial void OnIdReporteChanging(int value);
    partial void OnIdReporteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OnnoIncidenciasChanging(int value);
    partial void OnnoIncidenciasChanged();
    partial void OnIdTipoChanging(int value);
    partial void OnIdTipoChanged();
    partial void OnIdExperienciaEducativaChanging(int value);
    partial void OnIdExperienciaEducativaChanged();
    #endregion
		
		public Problematica()
		{
			this._Solucion = new EntitySet<Solucion>(new Action<Solucion>(this.attach_Solucion), new Action<Solucion>(this.detach_Solucion));
			this._ProblematicaPersonal = new EntitySet<ProblematicaPersonal>(new Action<ProblematicaPersonal>(this.attach_ProblematicaPersonal), new Action<ProblematicaPersonal>(this.detach_ProblematicaPersonal));
			this._ExperienciaEducativa = default(EntityRef<ExperienciaEducativa>);
			this._TipoProblematica = default(EntityRef<TipoProblematica>);
			this._ReporteTutoria = default(EntityRef<ReporteTutoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProblematica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProblematica
		{
			get
			{
				return this._IdProblematica;
			}
			set
			{
				if ((this._IdProblematica != value))
				{
					this.OnIdProblematicaChanging(value);
					this.SendPropertyChanging();
					this._IdProblematica = value;
					this.SendPropertyChanged("IdProblematica");
					this.OnIdProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReporte", DbType="Int NOT NULL")]
		public int IdReporte
		{
			get
			{
				return this._IdReporte;
			}
			set
			{
				if ((this._IdReporte != value))
				{
					if (this._ReporteTutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdReporteChanging(value);
					this.SendPropertyChanging();
					this._IdReporte = value;
					this.SendPropertyChanged("IdReporte");
					this.OnIdReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noIncidencias", DbType="Int NOT NULL")]
		public int noIncidencias
		{
			get
			{
				return this._noIncidencias;
			}
			set
			{
				if ((this._noIncidencias != value))
				{
					this.OnnoIncidenciasChanging(value);
					this.SendPropertyChanging();
					this._noIncidencias = value;
					this.SendPropertyChanged("noIncidencias");
					this.OnnoIncidenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipo", DbType="Int NOT NULL")]
		public int IdTipo
		{
			get
			{
				return this._IdTipo;
			}
			set
			{
				if ((this._IdTipo != value))
				{
					if (this._TipoProblematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoChanging(value);
					this.SendPropertyChanging();
					this._IdTipo = value;
					this.SendPropertyChanged("IdTipo");
					this.OnIdTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdExperienciaEducativa", DbType="Int NOT NULL")]
		public int IdExperienciaEducativa
		{
			get
			{
				return this._IdExperienciaEducativa;
			}
			set
			{
				if ((this._IdExperienciaEducativa != value))
				{
					if (this._ExperienciaEducativa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdExperienciaEducativaChanging(value);
					this.SendPropertyChanging();
					this._IdExperienciaEducativa = value;
					this.SendPropertyChanged("IdExperienciaEducativa");
					this.OnIdExperienciaEducativaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_Solucion", Storage="_Solucion", ThisKey="IdProblematica", OtherKey="IdProblematica")]
		public EntitySet<Solucion> Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				this._Solucion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_ProblematicaPersonal", Storage="_ProblematicaPersonal", ThisKey="IdProblematica", OtherKey="IdProblematica")]
		public EntitySet<ProblematicaPersonal> ProblematicaPersonal
		{
			get
			{
				return this._ProblematicaPersonal;
			}
			set
			{
				this._ProblematicaPersonal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciaEducativa_Problematica", Storage="_ExperienciaEducativa", ThisKey="IdExperienciaEducativa", OtherKey="IdExperienciaEducativa", IsForeignKey=true)]
		public ExperienciaEducativa ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa.Entity;
			}
			set
			{
				ExperienciaEducativa previousValue = this._ExperienciaEducativa.Entity;
				if (((previousValue != value) 
							|| (this._ExperienciaEducativa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienciaEducativa.Entity = null;
						previousValue.Problematica.Remove(this);
					}
					this._ExperienciaEducativa.Entity = value;
					if ((value != null))
					{
						value.Problematica.Add(this);
						this._IdExperienciaEducativa = value.IdExperienciaEducativa;
					}
					else
					{
						this._IdExperienciaEducativa = default(int);
					}
					this.SendPropertyChanged("ExperienciaEducativa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProblematica_Problematica", Storage="_TipoProblematica", ThisKey="IdTipo", OtherKey="IdTipo", IsForeignKey=true)]
		public TipoProblematica TipoProblematica
		{
			get
			{
				return this._TipoProblematica.Entity;
			}
			set
			{
				TipoProblematica previousValue = this._TipoProblematica.Entity;
				if (((previousValue != value) 
							|| (this._TipoProblematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProblematica.Entity = null;
						previousValue.Problematica.Remove(this);
					}
					this._TipoProblematica.Entity = value;
					if ((value != null))
					{
						value.Problematica.Add(this);
						this._IdTipo = value.IdTipo;
					}
					else
					{
						this._IdTipo = default(int);
					}
					this.SendPropertyChanged("TipoProblematica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_Problematica", Storage="_ReporteTutoria", ThisKey="IdReporte", OtherKey="IdReporte", IsForeignKey=true)]
		public ReporteTutoria ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria.Entity;
			}
			set
			{
				ReporteTutoria previousValue = this._ReporteTutoria.Entity;
				if (((previousValue != value) 
							|| (this._ReporteTutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReporteTutoria.Entity = null;
						previousValue.Problematica.Remove(this);
					}
					this._ReporteTutoria.Entity = value;
					if ((value != null))
					{
						value.Problematica.Add(this);
						this._IdReporte = value.IdReporte;
					}
					else
					{
						this._IdReporte = default(int);
					}
					this.SendPropertyChanged("ReporteTutoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = this;
		}
		
		private void detach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = null;
		}
		
		private void attach_ProblematicaPersonal(ProblematicaPersonal entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = this;
		}
		
		private void detach_ProblematicaPersonal(ProblematicaPersonal entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramaEducativo")]
	public partial class ProgramaEducativo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPRogramaEducativo;
		
		private string _nombre;
		
		private string _modalidad;
		
		private string _area;
		
		private int _IdAcademicoJefe;
		
		private int _IdCoordinador;
		
		private EntitySet<Estudiante> _Estudiante;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntitySet<Solucion> _Solucion;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntityRef<Academico> _Academico;
		
		private EntityRef<Academico> _Academico1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPRogramaEducativoChanging(int value);
    partial void OnIdPRogramaEducativoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnmodalidadChanging(string value);
    partial void OnmodalidadChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OnIdAcademicoJefeChanging(int value);
    partial void OnIdAcademicoJefeChanged();
    partial void OnIdCoordinadorChanging(int value);
    partial void OnIdCoordinadorChanged();
    #endregion
		
		public ProgramaEducativo()
		{
			this._Estudiante = new EntitySet<Estudiante>(new Action<Estudiante>(this.attach_Estudiante), new Action<Estudiante>(this.detach_Estudiante));
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			this._Solucion = new EntitySet<Solucion>(new Action<Solucion>(this.attach_Solucion), new Action<Solucion>(this.detach_Solucion));
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._Academico = default(EntityRef<Academico>);
			this._Academico1 = default(EntityRef<Academico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPRogramaEducativo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPRogramaEducativo
		{
			get
			{
				return this._IdPRogramaEducativo;
			}
			set
			{
				if ((this._IdPRogramaEducativo != value))
				{
					this.OnIdPRogramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IdPRogramaEducativo = value;
					this.SendPropertyChanged("IdPRogramaEducativo");
					this.OnIdPRogramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modalidad", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string modalidad
		{
			get
			{
				return this._modalidad;
			}
			set
			{
				if ((this._modalidad != value))
				{
					this.OnmodalidadChanging(value);
					this.SendPropertyChanging();
					this._modalidad = value;
					this.SendPropertyChanged("modalidad");
					this.OnmodalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcademicoJefe", DbType="Int NOT NULL")]
		public int IdAcademicoJefe
		{
			get
			{
				return this._IdAcademicoJefe;
			}
			set
			{
				if ((this._IdAcademicoJefe != value))
				{
					if (this._Academico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAcademicoJefeChanging(value);
					this.SendPropertyChanging();
					this._IdAcademicoJefe = value;
					this.SendPropertyChanged("IdAcademicoJefe");
					this.OnIdAcademicoJefeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCoordinador", DbType="Int NOT NULL")]
		public int IdCoordinador
		{
			get
			{
				return this._IdCoordinador;
			}
			set
			{
				if ((this._IdCoordinador != value))
				{
					if (this._Academico1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCoordinadorChanging(value);
					this.SendPropertyChanging();
					this._IdCoordinador = value;
					this.SendPropertyChanged("IdCoordinador");
					this.OnIdCoordinadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Estudiante", Storage="_Estudiante", ThisKey="IdPRogramaEducativo", OtherKey="IdProgramaEducativo")]
		public EntitySet<Estudiante> Estudiante
		{
			get
			{
				return this._Estudiante;
			}
			set
			{
				this._Estudiante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="IdPRogramaEducativo", OtherKey="IdProgramaEducativo")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Solucion", Storage="_Solucion", ThisKey="IdPRogramaEducativo", OtherKey="IdProgramaEducativo")]
		public EntitySet<Solucion> Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				this._Solucion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="IdPRogramaEducativo", OtherKey="IdProgramaEducativo")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ProgramaEducativo", Storage="_Academico", ThisKey="IdAcademicoJefe", OtherKey="IdAcademico", IsForeignKey=true)]
		public Academico Academico
		{
			get
			{
				return this._Academico.Entity;
			}
			set
			{
				Academico previousValue = this._Academico.Entity;
				if (((previousValue != value) 
							|| (this._Academico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academico.Entity = null;
						previousValue.ProgramaEducativo.Remove(this);
					}
					this._Academico.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativo.Add(this);
						this._IdAcademicoJefe = value.IdAcademico;
					}
					else
					{
						this._IdAcademicoJefe = default(int);
					}
					this.SendPropertyChanged("Academico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ProgramaEducativo1", Storage="_Academico1", ThisKey="IdCoordinador", OtherKey="IdAcademico", IsForeignKey=true)]
		public Academico Academico1
		{
			get
			{
				return this._Academico1.Entity;
			}
			set
			{
				Academico previousValue = this._Academico1.Entity;
				if (((previousValue != value) 
							|| (this._Academico1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academico1.Entity = null;
						previousValue.ProgramaEducativo1.Remove(this);
					}
					this._Academico1.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativo1.Add(this);
						this._IdCoordinador = value.IdAcademico;
					}
					else
					{
						this._IdCoordinador = default(int);
					}
					this.SendPropertyChanged("Academico1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_Estudiante(Estudiante entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solucion")]
	public partial class Solucion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSolucion;
		
		private string _titulo;
		
		private string _descripcion;
		
		private int _IdProgramaEducativo;
		
		private int _IdProblematica;
		
		private EntityRef<Problematica> _Problematica;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSolucionChanging(int value);
    partial void OnIdSolucionChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnIdProgramaEducativoChanging(int value);
    partial void OnIdProgramaEducativoChanged();
    partial void OnIdProblematicaChanging(int value);
    partial void OnIdProblematicaChanged();
    #endregion
		
		public Solucion()
		{
			this._Problematica = default(EntityRef<Problematica>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSolucion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSolucion
		{
			get
			{
				return this._IdSolucion;
			}
			set
			{
				if ((this._IdSolucion != value))
				{
					this.OnIdSolucionChanging(value);
					this.SendPropertyChanging();
					this._IdSolucion = value;
					this.SendPropertyChanged("IdSolucion");
					this.OnIdSolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProgramaEducativo", DbType="Int NOT NULL")]
		public int IdProgramaEducativo
		{
			get
			{
				return this._IdProgramaEducativo;
			}
			set
			{
				if ((this._IdProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IdProgramaEducativo = value;
					this.SendPropertyChanged("IdProgramaEducativo");
					this.OnIdProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProblematica", DbType="Int NOT NULL")]
		public int IdProblematica
		{
			get
			{
				return this._IdProblematica;
			}
			set
			{
				if ((this._IdProblematica != value))
				{
					if (this._Problematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProblematicaChanging(value);
					this.SendPropertyChanging();
					this._IdProblematica = value;
					this.SendPropertyChanged("IdProblematica");
					this.OnIdProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_Solucion", Storage="_Problematica", ThisKey="IdProblematica", OtherKey="IdProblematica", IsForeignKey=true)]
		public Problematica Problematica
		{
			get
			{
				return this._Problematica.Entity;
			}
			set
			{
				Problematica previousValue = this._Problematica.Entity;
				if (((previousValue != value) 
							|| (this._Problematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Problematica.Entity = null;
						previousValue.Solucion.Remove(this);
					}
					this._Problematica.Entity = value;
					if ((value != null))
					{
						value.Solucion.Add(this);
						this._IdProblematica = value.IdProblematica;
					}
					else
					{
						this._IdProblematica = default(int);
					}
					this.SendPropertyChanged("Problematica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Solucion", Storage="_ProgramaEducativo", ThisKey="IdProgramaEducativo", OtherKey="IdPRogramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.Solucion.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.Solucion.Add(this);
						this._IdProgramaEducativo = value.IdPRogramaEducativo;
					}
					else
					{
						this._IdProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProblematica")]
	public partial class TipoProblematica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipo;
		
		private string _tipo;
		
		private EntitySet<Problematica> _Problematica;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoChanging(int value);
    partial void OnIdTipoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public TipoProblematica()
		{
			this._Problematica = new EntitySet<Problematica>(new Action<Problematica>(this.attach_Problematica), new Action<Problematica>(this.detach_Problematica));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipo
		{
			get
			{
				return this._IdTipo;
			}
			set
			{
				if ((this._IdTipo != value))
				{
					this.OnIdTipoChanging(value);
					this.SendPropertyChanging();
					this._IdTipo = value;
					this.SendPropertyChanged("IdTipo");
					this.OnIdTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProblematica_Problematica", Storage="_Problematica", ThisKey="IdTipo", OtherKey="IdTipo")]
		public EntitySet<Problematica> Problematica
		{
			get
			{
				return this._Problematica;
			}
			set
			{
				this._Problematica.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.TipoProblematica = this;
		}
		
		private void detach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.TipoProblematica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutoria")]
	public partial class Tutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTutoria;
		
		private System.DateTime _fechaSesion;
		
		private string _noSesion;
		
		private int _IdPeriodoEscolar;
		
		private System.DateTime _fechaEntrega;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTutoriaChanging(int value);
    partial void OnIdTutoriaChanged();
    partial void OnfechaSesionChanging(System.DateTime value);
    partial void OnfechaSesionChanged();
    partial void OnnoSesionChanging(string value);
    partial void OnnoSesionChanged();
    partial void OnIdPeriodoEscolarChanging(int value);
    partial void OnIdPeriodoEscolarChanged();
    partial void OnfechaEntregaChanging(System.DateTime value);
    partial void OnfechaEntregaChanged();
    #endregion
		
		public Tutoria()
		{
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTutoria
		{
			get
			{
				return this._IdTutoria;
			}
			set
			{
				if ((this._IdTutoria != value))
				{
					this.OnIdTutoriaChanging(value);
					this.SendPropertyChanging();
					this._IdTutoria = value;
					this.SendPropertyChanged("IdTutoria");
					this.OnIdTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaSesion", DbType="Date NOT NULL")]
		public System.DateTime fechaSesion
		{
			get
			{
				return this._fechaSesion;
			}
			set
			{
				if ((this._fechaSesion != value))
				{
					this.OnfechaSesionChanging(value);
					this.SendPropertyChanging();
					this._fechaSesion = value;
					this.SendPropertyChanged("fechaSesion");
					this.OnfechaSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noSesion", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string noSesion
		{
			get
			{
				return this._noSesion;
			}
			set
			{
				if ((this._noSesion != value))
				{
					this.OnnoSesionChanging(value);
					this.SendPropertyChanging();
					this._noSesion = value;
					this.SendPropertyChanged("noSesion");
					this.OnnoSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPeriodoEscolar", DbType="Int NOT NULL")]
		public int IdPeriodoEscolar
		{
			get
			{
				return this._IdPeriodoEscolar;
			}
			set
			{
				if ((this._IdPeriodoEscolar != value))
				{
					this.OnIdPeriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._IdPeriodoEscolar = value;
					this.SendPropertyChanged("IdPeriodoEscolar");
					this.OnIdPeriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaEntrega", DbType="Date NOT NULL")]
		public System.DateTime fechaEntrega
		{
			get
			{
				return this._fechaEntrega;
			}
			set
			{
				if ((this._fechaEntrega != value))
				{
					this.OnfechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._fechaEntrega = value;
					this.SendPropertyChanged("fechaEntrega");
					this.OnfechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="IdTutoria", OtherKey="IdTutoria")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReporteTutoria")]
	public partial class ReporteTutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdReporte;
		
		private string _descripcion;
		
		private int _IdProgramaEducativo;
		
		private int _IdTutoria;
		
		private int _IdTutor;
		
		private int _IdEstudiante;
		
		private bool _asistencia;
		
		private EntitySet<ComentarioGeneral> _ComentarioGeneral;
		
		private EntitySet<Problematica> _Problematica;
		
		private EntityRef<Estudiante> _Estudiante;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
		private EntityRef<Tutoria> _Tutoria;
		
		private EntityRef<Academico> _Academico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdReporteChanging(int value);
    partial void OnIdReporteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnIdProgramaEducativoChanging(int value);
    partial void OnIdProgramaEducativoChanged();
    partial void OnIdTutoriaChanging(int value);
    partial void OnIdTutoriaChanged();
    partial void OnIdTutorChanging(int value);
    partial void OnIdTutorChanged();
    partial void OnIdEstudianteChanging(int value);
    partial void OnIdEstudianteChanged();
    partial void OnasistenciaChanging(bool value);
    partial void OnasistenciaChanged();
    #endregion
		
		public ReporteTutoria()
		{
			this._ComentarioGeneral = new EntitySet<ComentarioGeneral>(new Action<ComentarioGeneral>(this.attach_ComentarioGeneral), new Action<ComentarioGeneral>(this.detach_ComentarioGeneral));
			this._Problematica = new EntitySet<Problematica>(new Action<Problematica>(this.attach_Problematica), new Action<Problematica>(this.detach_Problematica));
			this._Estudiante = default(EntityRef<Estudiante>);
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			this._Tutoria = default(EntityRef<Tutoria>);
			this._Academico = default(EntityRef<Academico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReporte", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdReporte
		{
			get
			{
				return this._IdReporte;
			}
			set
			{
				if ((this._IdReporte != value))
				{
					this.OnIdReporteChanging(value);
					this.SendPropertyChanging();
					this._IdReporte = value;
					this.SendPropertyChanged("IdReporte");
					this.OnIdReporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProgramaEducativo", DbType="Int NOT NULL")]
		public int IdProgramaEducativo
		{
			get
			{
				return this._IdProgramaEducativo;
			}
			set
			{
				if ((this._IdProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IdProgramaEducativo = value;
					this.SendPropertyChanged("IdProgramaEducativo");
					this.OnIdProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTutoria", DbType="Int NOT NULL")]
		public int IdTutoria
		{
			get
			{
				return this._IdTutoria;
			}
			set
			{
				if ((this._IdTutoria != value))
				{
					if (this._Tutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTutoriaChanging(value);
					this.SendPropertyChanging();
					this._IdTutoria = value;
					this.SendPropertyChanged("IdTutoria");
					this.OnIdTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTutor", DbType="Int NOT NULL")]
		public int IdTutor
		{
			get
			{
				return this._IdTutor;
			}
			set
			{
				if ((this._IdTutor != value))
				{
					if (this._Academico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTutorChanging(value);
					this.SendPropertyChanging();
					this._IdTutor = value;
					this.SendPropertyChanged("IdTutor");
					this.OnIdTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudiante", DbType="Int NOT NULL")]
		public int IdEstudiante
		{
			get
			{
				return this._IdEstudiante;
			}
			set
			{
				if ((this._IdEstudiante != value))
				{
					if (this._Estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IdEstudiante = value;
					this.SendPropertyChanged("IdEstudiante");
					this.OnIdEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asistencia", DbType="Bit NOT NULL")]
		public bool asistencia
		{
			get
			{
				return this._asistencia;
			}
			set
			{
				if ((this._asistencia != value))
				{
					this.OnasistenciaChanging(value);
					this.SendPropertyChanging();
					this._asistencia = value;
					this.SendPropertyChanged("asistencia");
					this.OnasistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_ComentarioGeneral", Storage="_ComentarioGeneral", ThisKey="IdReporte", OtherKey="IdReporte")]
		public EntitySet<ComentarioGeneral> ComentarioGeneral
		{
			get
			{
				return this._ComentarioGeneral;
			}
			set
			{
				this._ComentarioGeneral.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_Problematica", Storage="_Problematica", ThisKey="IdReporte", OtherKey="IdReporte")]
		public EntitySet<Problematica> Problematica
		{
			get
			{
				return this._Problematica;
			}
			set
			{
				this._Problematica.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_ReporteTutoria", Storage="_Estudiante", ThisKey="IdEstudiante", OtherKey="IdEstudiante", IsForeignKey=true)]
		public Estudiante Estudiante
		{
			get
			{
				return this._Estudiante.Entity;
			}
			set
			{
				Estudiante previousValue = this._Estudiante.Entity;
				if (((previousValue != value) 
							|| (this._Estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudiante.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Estudiante.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._IdEstudiante = value.IdEstudiante;
					}
					else
					{
						this._IdEstudiante = default(int);
					}
					this.SendPropertyChanged("Estudiante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ReporteTutoria", Storage="_ProgramaEducativo", ThisKey="IdProgramaEducativo", OtherKey="IdPRogramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._IdProgramaEducativo = value.IdPRogramaEducativo;
					}
					else
					{
						this._IdProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_ReporteTutoria", Storage="_Tutoria", ThisKey="IdTutoria", OtherKey="IdTutoria", IsForeignKey=true)]
		public Tutoria Tutoria
		{
			get
			{
				return this._Tutoria.Entity;
			}
			set
			{
				Tutoria previousValue = this._Tutoria.Entity;
				if (((previousValue != value) 
							|| (this._Tutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutoria.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Tutoria.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._IdTutoria = value.IdTutoria;
					}
					else
					{
						this._IdTutoria = default(int);
					}
					this.SendPropertyChanged("Tutoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academico_ReporteTutoria", Storage="_Academico", ThisKey="IdTutor", OtherKey="IdAcademico", IsForeignKey=true)]
		public Academico Academico
		{
			get
			{
				return this._Academico.Entity;
			}
			set
			{
				Academico previousValue = this._Academico.Entity;
				if (((previousValue != value) 
							|| (this._Academico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academico.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Academico.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._IdTutor = value.IdAcademico;
					}
					else
					{
						this._IdTutor = default(int);
					}
					this.SendPropertyChanged("Academico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComentarioGeneral(ComentarioGeneral entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = this;
		}
		
		private void detach_ComentarioGeneral(ComentarioGeneral entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = null;
		}
		
		private void attach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = this;
		}
		
		private void detach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProblematicaPersonal")]
	public partial class ProblematicaPersonal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProblematicaPersonal;
		
		private string _descripcion;
		
		private int _IdProblematica;
		
		private int _IdEstudiante;
		
		private EntityRef<Estudiante> _Estudiante;
		
		private EntityRef<Problematica> _Problematica;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProblematicaPersonalChanging(int value);
    partial void OnIdProblematicaPersonalChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnIdProblematicaChanging(int value);
    partial void OnIdProblematicaChanged();
    partial void OnIdEstudianteChanging(int value);
    partial void OnIdEstudianteChanged();
    #endregion
		
		public ProblematicaPersonal()
		{
			this._Estudiante = default(EntityRef<Estudiante>);
			this._Problematica = default(EntityRef<Problematica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProblematicaPersonal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProblematicaPersonal
		{
			get
			{
				return this._IdProblematicaPersonal;
			}
			set
			{
				if ((this._IdProblematicaPersonal != value))
				{
					this.OnIdProblematicaPersonalChanging(value);
					this.SendPropertyChanging();
					this._IdProblematicaPersonal = value;
					this.SendPropertyChanged("IdProblematicaPersonal");
					this.OnIdProblematicaPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProblematica", DbType="Int NOT NULL")]
		public int IdProblematica
		{
			get
			{
				return this._IdProblematica;
			}
			set
			{
				if ((this._IdProblematica != value))
				{
					if (this._Problematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProblematicaChanging(value);
					this.SendPropertyChanging();
					this._IdProblematica = value;
					this.SendPropertyChanged("IdProblematica");
					this.OnIdProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudiante", DbType="Int NOT NULL")]
		public int IdEstudiante
		{
			get
			{
				return this._IdEstudiante;
			}
			set
			{
				if ((this._IdEstudiante != value))
				{
					if (this._Estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IdEstudiante = value;
					this.SendPropertyChanged("IdEstudiante");
					this.OnIdEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiante_ProblematicaPersonal", Storage="_Estudiante", ThisKey="IdEstudiante", OtherKey="IdEstudiante", IsForeignKey=true)]
		public Estudiante Estudiante
		{
			get
			{
				return this._Estudiante.Entity;
			}
			set
			{
				Estudiante previousValue = this._Estudiante.Entity;
				if (((previousValue != value) 
							|| (this._Estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudiante.Entity = null;
						previousValue.ProblematicaPersonal.Remove(this);
					}
					this._Estudiante.Entity = value;
					if ((value != null))
					{
						value.ProblematicaPersonal.Add(this);
						this._IdEstudiante = value.IdEstudiante;
					}
					else
					{
						this._IdEstudiante = default(int);
					}
					this.SendPropertyChanged("Estudiante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_ProblematicaPersonal", Storage="_Problematica", ThisKey="IdProblematica", OtherKey="IdProblematica", IsForeignKey=true)]
		public Problematica Problematica
		{
			get
			{
				return this._Problematica.Entity;
			}
			set
			{
				Problematica previousValue = this._Problematica.Entity;
				if (((previousValue != value) 
							|| (this._Problematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Problematica.Entity = null;
						previousValue.ProblematicaPersonal.Remove(this);
					}
					this._Problematica.Entity = value;
					if ((value != null))
					{
						value.ProblematicaPersonal.Add(this);
						this._IdProblematica = value.IdProblematica;
					}
					else
					{
						this._IdProblematica = default(int);
					}
					this.SendPropertyChanged("Problematica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
